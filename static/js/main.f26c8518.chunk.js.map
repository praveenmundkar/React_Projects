{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","placeholder","TextForm","useState","Text","setText","cBtn","setcBtn","act","setAct","array","split","filter","element","length","heading","style","marginTop","value","onChange","event","target","rows","onClick","navigator","clipboard","writeText","color","cursor","newText","toUpperCase","toLowerCase","str","splitstring","i","charAt","substring","join","primecase","titlecase","replace","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f26c8518.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    \r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">About</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Contact</a>\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                    <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUPclick=()=>{\r\n        let newText = Text.toUpperCase();\r\n        setText(newText);\r\n        setcBtn('copy');\r\n        setAct('Converted To Uppercase');\r\n\r\n    }\r\n    const handleLOclick=()=>{\r\n        let newText = Text.toLowerCase();\r\n        setText(newText);\r\n        setcBtn('copy');\r\n        setAct('Converted To Lowercase');\r\n\r\n    }\r\n\r\n    function titlecase(str){\r\n        var splitstring = str.toLowerCase().split(' ');\r\n        for (var i = 0; i < splitstring.length; i++ ){\r\n            splitstring[i] = splitstring[i].charAt(0).toUpperCase() + splitstring[i].substring(1);\r\n        }\r\n        return splitstring.join(' ')\r\n    }\r\n    function primecase(str){\r\n        var splitstring = str.split('.');\r\n        for (var i = 0; i < splitstring.length; i++ ){\r\n            splitstring[i] = splitstring[i].charAt(0).toUpperCase() + splitstring[i].substring(1);\r\n        }\r\n        return splitstring.join(' ')\r\n    }\r\n    const handleCapEachclick=()=>{\r\n       let newText = titlecase(Text)\r\n       setText(newText);\r\n       setcBtn('copy');\r\n       setAct('Capitalized Each Word');\r\n\r\n    }\r\n    const handleCapclick=()=>{\r\n        let newText = primecase(Text)\r\n        setText(newText);\r\n        setcBtn('copy');\r\n        setAct('Capitalized text');\r\n\r\n    }\r\n    const handleRPclick=()=>{\r\n        const puncs = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\r\n        const newText = Text.replace(puncs,'')\r\n        setText(newText);\r\n        setcBtn('copy');\r\n        setAct('Removed Punctuation');\r\n\r\n    }\r\n    const handleCopyclick=()=>{ \r\n        navigator.clipboard.writeText(Text)\r\n        setcBtn('copied');\r\n        \r\n    }\r\n    \r\n    const handleESRclick=()=>{ \r\n        var space= /[ ]+/;\r\n        let newText = Text.split(space)\r\n        setText(newText.join(' '));\r\n        setAct('Removed Extra Spaces');\r\n        \r\n    }\r\n    \r\n\r\n    const handleChange=(event)=>{\r\n        setText(event.target.value);\r\n        setcBtn('copy');\r\n        \r\n    }\r\n \r\n    const [Text, setText] = useState('');\r\n    const [cBtn, setcBtn] = useState('copy');\r\n    const [act, setAct] = useState(\"..\");\r\n    \r\n    let col={\r\n        color :'#07ffff'\r\n    }\r\n    let cursorp={\r\n        \r\n        color : 'white',\r\n        cursor :'auto'\r\n    }\r\n   \r\n \r\n    var array = Text.split(' ').filter((element)=>{ return element.length !== 0});\r\n\r\n\r\n    \r\n   \r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h2 className=\"mb-2\"> {props.heading} </h2>\r\n            <div className=\"mb-3 tac\" style={{marginTop:'30px'}}>\r\n                <textarea className=\"form-control tarea\" value={Text} onChange={handleChange} id=\"mybox\" rows=\"8\" placeholder=\"Paste or Type your Text here\">\r\n                </textarea>\r\n                <button className=\"btn btn-dark mx-1 cb\" onClick={handleCopyclick}> {cBtn}</button>\r\n                \r\n                <button className='btn-danger LAct' style={cursorp}><strong> Recent Activity : </strong><span style={col}>{act}</span></button>\r\n\r\n            </div>\r\n            <button className=\"btn btn-outline-dark mx-1 my-1\" onClick={handleUPclick}> Convert to Uppercase</button>\r\n            <button className=\"btn btn-outline-dark mx-1 my-1\" onClick={handleLOclick}> Convert to Lowercase</button>\r\n            <button className=\"btn btn-outline-dark mx-1 my-1\" onClick={handleCapclick}> Capitalize Each Sentence</button>\r\n            <button className=\"btn btn-outline-dark mx-1 my-1\" onClick={handleCapEachclick}> Capitalize Each Word</button>\r\n            <button className=\"btn btn-outline-dark mx-1 my-1\" onClick={handleRPclick}> Remove Puntuation</button>\r\n            <button className=\"btn btn-outline-dark mx-1 my-1\" onClick={handleESRclick}> Remove ExtraSpaces</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h2>Summary Of Your Text</h2>\r\n            <p>{array.length} Words and {array.join(' ').length} Characters</p>\r\n            <p>Average reading time {0.008 * array.length} Minutes</p>\r\n            <h2 >Preview</h2>\r\n            <div className='preview my-3'>\r\n            <p>{Text}</p>\r\n            </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\nfunction App() {\n  return (\n    <>\n      < Navbar title=\"TextUtilzz\" />\n      <div className=\"container cdesign my-3\">\n        <TextForm heading=\"Try TextUtilz | Word Counter | Char Counter | Convert Case \" />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}